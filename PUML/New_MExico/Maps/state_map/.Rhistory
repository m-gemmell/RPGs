#Summarise the phyloseq object ####
#Install BiocManager
install.packages("BiocManager")
library(BiocManager)
#Install phyloseq
#https://joey711.github.io/phyloseq/install.html
BiocManager::install('phyloseq')
#Summarise the phyloseq object ####
#Install BiocManager
install.packages("BiocManager", INSTALL_opts = "--no-lock")
install.packages("BiocManager", INSTALL_opts = "--no-lock")
library(BiocManager)
#Summarise the phyloseq object ####
#Install BiocManager
install.packages("BiocManager", INSTALL_opts = "--no-lock")
install.packages("BiocManager", INSTALL_opts = "--no-lock")
#Summarise the phyloseq object ####
#Install BiocManager
install.packages("BiocManager", INSTALL_opts = "--no-lock")
library(BiocManager)
#Summarise the phyloseq object ####
#Install BiocManager
install.packages("BiocManager", INSTALL_opts = "--no-lock")
BiocManager::install(version="3.16")
library(BiocManager)
#Ensure it is installed as version 3.16
BiocManager::install(version="3.16")
#Install phyloseq
#https://joey711.github.io/phyloseq/install.html
BiocManager::install('phyloseq')
#Install microbiome package
BiocManager::install("microbiome")
library("microbiome")
install.packages("rlang")
install.packages("rlang")
library("phyloseq")
#Install some problem pacages
packages_vector <- c("rlang", "vctrs")
#Install some problem pacages
problem_pckgs <- c("rlang", "vctrs")
install.packages(problem_pckgs)
install.packages(problem_pckgs)
install.packages(problem_pckgs)
install.packages(problem_pckgs)
#Set you R library site to a relvent place in your home directory
R_LIBS_SITE="F:/R/library"
#Install qiime2r package
#https://github.com/jbisanz/qiime2R
if (!requireNamespace("devtools", quietly = TRUE)){install.packages("devtools")}
install.packages("devtools")
#Ensure to run RStudio as administrator
#Set you R library site to a relvent place in your home directory
R_LIBS_SITE="F:/R/library"
#Install qiime2r package
#https://github.com/jbisanz/qiime2R
if (!requireNamespace("devtools", quietly = TRUE)){install.packages("devtools")}
devtools::install_github("jbisanz/qiime2R")
#Install qiime2r package
#https://github.com/jbisanz/qiime2R
if (!requireNamespace("devtools", quietly = TRUE)){install.packages("devtools")}
devtools::install_github("jbisanz/qiime2R")
#Install BiocManager
install.packages("BiocManager")
#Ensure it is installed as version 3.16
BiocManager::install(version="3.16")
library(BiocManager)
#Install phyloseq
#https://joey711.github.io/phyloseq/install.html
BiocManager::install('phyloseq')
1e-1
1e-2
1e-2
install.packages("bookdown")
install.packages("renv")
pie
pie
pi
pi * 25
border <- opq(bbox = "New Mexico") %>%
osmdata::osmdata_sf()
#Libraries
library(tidyverse)
library(osmdata) # package for working with streets
library(showtext) # for custom fonts
library(ggmap)
library(rvest)
library(sf)
#New mexico colour palette
NM_brown <- "#665600"
NM_red <- "#bf0a30"
NM_blue <- "#40e0d0"
NM_yellow <- "#ffd700"
NM_maroon <- "#4c0413"
#Get new Mexico area as polygon
NM_area <- osmdata::getbb("New Mexico")
NM <- osmdata::getbb("New Mexico", format="polygon")
#Extract border of New Mexico
border <- opq(bbox = "New Mexico") %>%
osmdata::osmdata_sf()
#Get border
boundaries <- opq(bbox = 'New Mexico') %>%
add_osm_feature(key = 'admin_level', value = '7') %>%
osmdata_sf %>% unique_osmdata
qtm(boundaries$osm_multipolygons[5,])
install.packages("tmap")
library(tmap)
qtm(boundaries$osm_multipolygons[5,])
tmap_mode('view')
qtm(boundaries$osm_multipolygons[5,])
View(boundaries)
qtm(boundaries$osm_multipolygons)
map_plot <- ggplot() +
geom_polygon(boundaries)
boundaries
map_plot <- ggplot() +
geom_polygon(boundaries$osm_polygons)
boundaries$osm_polygons
boundaries$osm_multipolygons[5,]
boundaries$osm_multipolygons
qtm(boundaries$osm_multipolygons)
#Need to set tmap mode to plot
tmap_mode("plot")
qtm(boundaries$osm_multipolygons)
qtm(boundaries$osm_multipolygons)
boundaries$osm_multipolygons
boundaries <- opq(bbox = 'Bilbao, Spain') %>%
add_osm_feature(key = 'admin_level', value = '7') %>%
osmdata_sf %>% unique_osmdata
qtm(boundaries$osm_multipolygons[5,])
boundaries$osm_multipolygons[5,]
boundaries$osm_multipolygons
tmap_mode("plot")
qtm(boundaries$osm_multipolygons)
#Extract border of New Mexico
#Get border
boundaries <- opq(bbox = 'New Mexico') %>%
add_osm_feature(key = 'admin_level', value = '7') %>%
osmdata_sf %>% unique_osmdata
install.packages("usmap")
library(usmap)
state_border <- us_map(include = "NM")
View(state_border)
map_plot <- ggplot() +
geom_polygon(boundaries$osm_polygons, aes(x = x, y = y))
map_plot <- ggplot() +
geom_polygon(data = state_border, aes(x = x, y = y, group = group), fill = NA, color = "black")
ggsave("NM_map.png", plot = map_plot,
device = "png", dpi = 300, units = "mm", height = 297, width = 210)
map_plot <- ggplot() +
geom_polygon(data = state_border, aes(x = x, y = y, group = group), fill = NA, color = "red")
map_plot
state_border
View(state_border)
state_border$geom
install.packages("geobr")
#Try geobr for map border
library(geobr)
NM_border <- read_state(code_state = "NM", year=2020)
setwd("F:/Git/RPGs/PUML/New_MExico/Maps/state_map")
#Libraries
library(tidyverse)
library(osmdata) # package for working with streets
library(osmextract)
library(showtext) # for custom fonts
library(ggmap)
library(rvest)
library(sf)
#New mexico colour palette
NM_brown <- "#665600"
NM_red <- "#bf0a30"
NM_blue <- "#40e0d0"
NM_yellow <- "#ffd700"
NM_maroon <- "#4c0413"
#Load in data ####
#Get new Mexico area as polygon
NM_area <- osmdata::getbb("New Mexico")
NM <- osmdata::getbb("New Mexico", format="polygon")
#Lines ####
# #Get all osm_lines of New mexico
# osm_lines <- oe_get("us/new-mexico", stringsAsFactors = FALSE, quiet = TRUE)
# #Save this and load
# save(osm_lines, file = "nm_osm_lines.RData")
#Load osm data
load("nm_osm_lines.RData")
# River ####
#Fiver features to extract
waterway_feats <- c("river")
#Extract river info
rivers_nm <- osm_lines[osm_lines$waterway %in% waterway_feats, ]
#Get length of rivers to filter rivers by length
river_all_names <- unique(rivers_nm$name)
#Loop through river names
river_lengths_vector <- c()
for (i in 1:length(river_all_names)) {
r <- river_all_names[i]
line_string_vector <- rivers_nm[rivers_nm$name == r,"geometry"]
length <- sum(st_length(line_string_vector))
river_lengths_vector[r] <- length
}
#Sort vector
river_lengths_vector <- sort(river_lengths_vector, decreasing = TRUE)
#Extract rivers of interest
#Big rivers
river_names <- names(river_lengths_vector[river_lengths_vector > 100000])
big_rivers_nm <- rivers_nm[rivers_nm$name %in% river_names,]
#BIg and Small rivers (set so big rivers go on top)
river_names <- names(river_lengths_vector[river_lengths_vector > 10000])
smaller_rivers_nm <- rivers_nm[rivers_nm$name %in% river_names,]
# Highways ####
#Highway features to extract
highway_features = c("motorway", "primary", "motorway_link", "primary_link")
#Extract
highway_nm <- osm_lines[osm_lines$highway %in% highway_features, ]
#Secondary roads
#Highway features to extract
road_features = c("secondary",  "secondary_link")
#Extract
roads_nm <- osm_lines[osm_lines$highway %in% road_features, ]
# Remove line data ####
remove(osm_lines)
#Load data
load("nm_osm_polygons.RData")
# Natural features ####
#Forest and woods
#Extract
forest_nm <- osm_polygon[osm_polygon$landuse %in% "forest",]
wood_nm <- osm_polygon[osm_polygon$natural %in% "wood",]
nature_reserve_forest_nm <- osm_polygon[osm_polygon$leisure %in% "nature_reserve",]
nature_reserve_forest_nm <- nature_reserve_forest_nm[grep(pattern = "Forest", nature_reserve_forest_nm$name),]
gila_forest <- osm_polygon[grep("Gila National Forest", osm_polygon$name),]
lincoln_forest <- osm_polygon[grep("Lincoln National Forest", osm_polygon$name),]
#White sands
white_sands_nm <- osm_polygon[osm_polygon$leisure %in% "nature_reserve",]
white_sands_nm <- white_sands_nm[grep(pattern = "White Sands National Park", white_sands_nm$name),]
#White sands missile range
white_sands_missile_range_nm <- white_sands_missile_range_nm[white_sands_missile_range_nm$military %in% "range",]
#White sands missile range
white_sands_missile_range_nm <- osm_polygon[osm_polygon$military %in% "range",]
white_sands_missile_range_nm <- white_sands_missile_range_nm[grep(pattern = "White Sands Missile Range", white_sands_missile_range_nm$name),]
#Mescalero indian reservation
#mescalero <- osm_polygon[osm_polygon$name == "Mescalero Apache Indian Reservation",]
#Plot ####
map_plot <- ggplot() +
#Geoms towards top go below geom towards bottom
#Forest
geom_sf(data = forest_nm, color = "#C0FF7F", fill = "#C0FF7F") +
geom_sf(data = wood_nm, color = "#C0FF7F", fill = "#C0FF7F") +
geom_sf(data = nature_reserve_forest_nm, color = "#C0FF7F", fill = "#C0FF7F") +
geom_sf(data = gila_forest, color = "#C0FF7F", fill = "#C0FF7F") +
geom_sf(data = lincoln_forest, color = "#C0FF7F", fill = "#C0FF7F") +
#Mescalero indian reservation
#geom_sf(data = mescalero, color = NM_maroon, fill = NM_red) +
#White sands
geom_sf(data = white_sands_nm, color = "white", fill = "white") +
geom_sf(data = white_sands_missile_range_nm, color = NM_red, fill = NM_yellow) +
#Rivers
geom_sf(data = smaller_rivers_nm, color = "#7fc0ff", size=0.5, alpha=0.5) +
geom_sf(data = big_rivers_nm, color = "#7fc0ff", size=2) +
#Roads
geom_sf(data = roads_nm, color = "#ffbe7f", size=0.5, alpha=0.5) +
geom_sf(data = highway_nm, color = "#ffbe7f", size=1) +
#Format stuff
coord_sf(xlim = NM_area[c(1,3)], ylim = NM_area[c(2,4)], expand = FALSE) +
theme_void() +
theme(
plot.background = element_rect(fill = "#282828")
)
ggsave("NM_map.png", plot = map_plot,
device = "png", dpi = 300, units = "mm", height = 297, width = 210)
osm_polygon[grep("Lincoln National Forest", osm_polygon$name),]
osm_polygon[grep("Lincoln", osm_polygon$name),]
lincoln_forest <- osm_polygon[(osm_polygon$name == "Lincoln National Forest"),]
View(lincoln_forest)
#Plot ####
map_plot <- ggplot() +
#Geoms towards top go below geom towards bottom
#Forest
geom_sf(data = forest_nm, color = "#C0FF7F", fill = "#C0FF7F") +
geom_sf(data = wood_nm, color = "#C0FF7F", fill = "#C0FF7F") +
geom_sf(data = nature_reserve_forest_nm, color = "#C0FF7F", fill = "#C0FF7F") +
geom_sf(data = gila_forest, color = "#C0FF7F", fill = "#C0FF7F") +
geom_sf(data = lincoln_forest, color = "#C0FF7F", fill = "#C0FF7F") +
#Mescalero indian reservation
#geom_sf(data = mescalero, color = NM_maroon, fill = NM_red) +
#White sands
geom_sf(data = white_sands_nm, color = "white", fill = "white") +
geom_sf(data = white_sands_missile_range_nm, color = NM_red, fill = NM_yellow) +
#Rivers
geom_sf(data = smaller_rivers_nm, color = "#7fc0ff", size=0.5, alpha=0.5) +
geom_sf(data = big_rivers_nm, color = "#7fc0ff", size=2) +
#Roads
geom_sf(data = roads_nm, color = "#ffbe7f", size=0.5, alpha=0.5) +
geom_sf(data = highway_nm, color = "#ffbe7f", size=1) +
#Format stuff
coord_sf(xlim = NM_area[c(1,3)], ylim = NM_area[c(2,4)], expand = FALSE) +
theme_void() +
theme(
plot.background = element_rect(fill = "#282828")
)
ggsave("NM_map.png", plot = map_plot,
device = "png", dpi = 300, units = "mm", height = 297, width = 210)
osm_polygon[grep("Mescalero", osm_polygon$name),]
mescalero <- osm_polygon[(osm_polygon$name == "Mescalero Apache Indian Reservation"),]
map_plot <- ggplot() +
#Geoms towards top go below geom towards bottom
#Forest
geom_sf(data = forest_nm, color = "#C0FF7F", fill = "#C0FF7F") +
geom_sf(data = wood_nm, color = "#C0FF7F", fill = "#C0FF7F") +
geom_sf(data = nature_reserve_forest_nm, color = "#C0FF7F", fill = "#C0FF7F") +
geom_sf(data = gila_forest, color = "#C0FF7F", fill = "#C0FF7F") +
geom_sf(data = lincoln_forest, color = "#C0FF7F", fill = "#C0FF7F") +
geom_sf(data = mescalero, color = "#C0FF7F", fill = "#C0FF7F") +
#Mescalero indian reservation
#geom_sf(data = mescalero, color = NM_maroon, fill = NM_red) +
#White sands
geom_sf(data = white_sands_nm, color = "white", fill = "white") +
geom_sf(data = white_sands_missile_range_nm, color = NM_red, fill = NM_yellow) +
#Rivers
geom_sf(data = smaller_rivers_nm, color = "#7fc0ff", size=0.5, alpha=0.5) +
geom_sf(data = big_rivers_nm, color = "#7fc0ff", size=2) +
#Roads
geom_sf(data = roads_nm, color = "#ffbe7f", size=0.5, alpha=0.5) +
geom_sf(data = highway_nm, color = "#ffbe7f", size=1) +
#Format stuff
coord_sf(xlim = NM_area[c(1,3)], ylim = NM_area[c(2,4)], expand = FALSE) +
theme_void() +
theme(
plot.background = element_rect(fill = "#282828")
)
ggsave("NM_map.png", plot = map_plot,
device = "png", dpi = 300, units = "mm", height = 297, width = 210)
ggsave("NM_map.png", plot = map_plot,
device = "png", dpi = 300, units = "mm", height = 420, width = 297)
osm_polygon[grep("Mountain", osm_polygon$name),]
osm_polygon[grep("Mountain", osm_polygon$name),"name"]
unique(osm_polygon[grep("Mountain", osm_polygon$name),"name"])
mountains <- osm_polygon[osm_polygon$leisure %in% "nature_reserve",]
mountains <- mountains[grep(pattern = "Mountain", mountains$name),]
mounatins
mountains
table(mountains$name)
#Plot ####
map_plot <- ggplot() +
#Geoms towards top go below geom towards bottom
#Mounatins
geom_sf(data= mountains, color="#FE7FFF",fill="#FE7FFF") +
#Forest
geom_sf(data = forest_nm, color = "#C0FF7F", fill = "#C0FF7F") +
geom_sf(data = wood_nm, color = "#C0FF7F", fill = "#C0FF7F") +
geom_sf(data = nature_reserve_forest_nm, color = "#C0FF7F", fill = "#C0FF7F") +
geom_sf(data = gila_forest, color = "#C0FF7F", fill = "#C0FF7F") +
geom_sf(data = lincoln_forest, color = "#C0FF7F", fill = "#C0FF7F") +
geom_sf(data = mescalero, color = "#C0FF7F", fill = "#C0FF7F") +
#Mescalero indian reservation
#geom_sf(data = mescalero, color = NM_maroon, fill = NM_red) +
#White sands
geom_sf(data = white_sands_nm, color = "white", fill = "white") +
geom_sf(data = white_sands_missile_range_nm, color = NM_red, fill = NM_yellow) +
#Rivers
geom_sf(data = smaller_rivers_nm, color = "#7fc0ff", size=0.5, alpha=0.5) +
geom_sf(data = big_rivers_nm, color = "#7fc0ff", size=2) +
#Roads
geom_sf(data = roads_nm, color = "#ffbe7f", size=0.5, alpha=0.5) +
geom_sf(data = highway_nm, color = "#ffbe7f", size=1) +
#Format stuff
coord_sf(xlim = NM_area[c(1,3)], ylim = NM_area[c(2,4)], expand = FALSE) +
theme_void() +
theme(
plot.background = element_rect(fill = "#282828")
)
ggsave("NM_map.png", plot = map_plot,
device = "png", dpi = 300, units = "mm", height = 420, width = 297)
osm_polygon[grep("Lake", osm_polygon$name),"name"]
osm_polygon[grep("Lake", osm_polygon$name),]
#Mescalero indian reservation
#mescalero <- osm_polygon[osm_polygon$name == "Mescalero Apache Indian Reservation",]
#Water features
water <- osm_polygon[osm_polygon$natural %in% "water",]
#Plot ####
map_plot <- ggplot() +
#Geoms towards top go below geom towards bottom
#Mounatins
geom_sf(data= mountains, color="#FE7FFF",fill="#FE7FFF") +
#Forest
geom_sf(data = forest_nm, color = "#C0FF7F", fill = "#C0FF7F") +
geom_sf(data = wood_nm, color = "#C0FF7F", fill = "#C0FF7F") +
geom_sf(data = nature_reserve_forest_nm, color = "#C0FF7F", fill = "#C0FF7F") +
geom_sf(data = gila_forest, color = "#C0FF7F", fill = "#C0FF7F") +
geom_sf(data = lincoln_forest, color = "#C0FF7F", fill = "#C0FF7F") +
geom_sf(data = mescalero, color = "#C0FF7F", fill = "#C0FF7F") +
#Mescalero indian reservation
#geom_sf(data = mescalero, color = NM_maroon, fill = NM_red) +
#White sands
geom_sf(data = white_sands_nm, color = "white", fill = "white") +
geom_sf(data = white_sands_missile_range_nm, color = NM_red, fill = NM_yellow) +
#Rivers
geom_sf(data = smaller_rivers_nm, color = "#7fc0ff", size=0.5, alpha=0.5) +
geom_sf(data = big_rivers_nm, color = "#7fc0ff", size=2) +
#Water features like lakes
geom_sf(data = water, color = "#7fc0ff", fill = "#7fc0ff") +
#Roads
geom_sf(data = roads_nm, color = "#ffbe7f", size=0.5, alpha=0.5) +
geom_sf(data = highway_nm, color = "#ffbe7f", size=1) +
#Format stuff
coord_sf(xlim = NM_area[c(1,3)], ylim = NM_area[c(2,4)], expand = FALSE) +
theme_void() +
theme(
plot.background = element_rect(fill = "#282828")
)
ggsave("NM_map.png", plot = map_plot,
device = "png", dpi = 300, units = "mm", height = 420, width = 297)
